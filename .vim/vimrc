"TODO ?
"- file explorer : 'Shougo/defx.nvim' when ready + denite
"- viki
"- vim outliner, vim-wordy(faire trad. français)
"haskell (from https://haskell-at-work.com/about.html#faq):
"   neoformat (pourquoi ?)
"   neomake => car assynchrone, regarder les languages supportés (vs syntastic) 
"   regarder aussi config haskell-vim-now
"   utilité de vim2hs ?
"s'inspirer de https://github.com/rafi/vim-config (pour les shortcuts en particulier)

" Required:
call plug#begin(expand('~/.vim/bundle'))

" Add or remove your Bundles here:
Plug 'Shougo/vimproc.vim', { 'do' : 'make' }

"--------- File navigation
Plug 'mhinz/vim-startify' " Fancy start screen with links to recent files
" Plug 'scrooloose/nerdtree' "disabled because it overrides netrw when using '-' and don't go upper the initial directory
" Plug 'tiagofumo/vim-nerdtree-syntax-highlight' " Colors for NERDTree => too slow
let NERDTreeChDirMode=2 " change current directory when setting new root directory
Plug 'dhruvasagar/vim-vinegar' "vinegar NERDTree version
" Plug 'tpope/vim-vinegar' " netrw shortcuts : - to jump from a buffer to its directory, etc.

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' } " fuzzy finder
Plug 'junegunn/fzf.vim'

"--------- Layout and style
Plug 'wesQ3/vim-windowswap' "swap windows: <leader>ww (1st time on 1st window, 2nd time on 2nd window)
Plug 'moll/vim-bbye' " :Bdelete and :Bwipeout quit buffers nicely without destroying windows
Plug 'vim-airline/vim-airline'
Plug 'edkolev/tmuxline.vim'
Plug 'vim-scripts/wombat256.vim' " Wombat Color scheme
" Plug 'rakr/vim-one' " Vim-one Color scheme
Plug 'ryanoasis/vim-devicons' " Dev fonts (icons for status bars and file explorers)
Plug 'rafi/vim-sidemenu' " Add a customizable side menu 

"--------- Text navigation
Plug 'nelstrom/vim-visual-star-search'
Plug 'vim-scripts/utl.vim' "add clickable links on urls / images
Plug 'haya14busa/incsearch.vim' " enhanced incremental searching 

"--------- Text manipulation
Plug 'brooth/far.vim' " Find and replace in multiple files
Plug 'tpope/vim-surround' "easily delete, change and add such surroundings in pairs
Plug 'chrisbra/NrrwRgn' " :NR focus on a selected region while making the rest inaccessible
Plug 'terryma/vim-multiple-cursors' "Like SublimeText multisection 
Plug 'maxbrunsfeld/vim-yankstack' "Navigate the history of yanks with <alt-p> and <alt-shift-p>
Plug 'mbbill/undotree' " :UndotreeToggle
Plug 'godlygeek/tabular' " :Tabularize /<delimiter> (must be before vim-markdown)
Plug 'mattn/emmet-vim' "Expand CSS selectors expression to HTML (ie div#page>div.logo+ul#navigation>li*5>a)
Plug 'michaeljsmith/vim-indent-object' " Text object based on indentation : ai, ii, aI, iI
Plug 'kana/vim-textobj-user' " custom text objects (required by ghci.vim)

"--------- General coding support
Plug 'tomtom/tcomment_vim'
Plug 'scrooloose/syntastic' "Check code syntax
Plug 'joonty/vdebug' " Debugger (:help vdebug) XXX Ne marche pas ?  
Plug 'majutsushi/tagbar' " functions and variables list
Plug 'vim-scripts/IndentAnything'
Plug 'nathanaelkane/vim-indent-guides' " <leader>ig : colorize indentation

"Git 
Plug 'vim-scripts/gitignore'
Plug 'mattn/gist-vim' "Post to gist :Gist 
Plug 'tpope/vim-fugitive' " required by gv
Plug 'junegunn/gv.vim' "commit browser :GV, :GV! (current file), :GV? (fills location list), visual mode (current lines)
Plug 'airblade/vim-gitgutter' " Add signs on the gutter for lines modified
let g:gitgutter_max_signs=999

"Completion
Plug 'jiangmiao/auto-pairs' " deals intelligently with pairs of punctuation () [] '' {} ... 
" Plug 'kana/vim-smartinput' " deals intelligently with pairs of punctuation () [] '' {} ... 
if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' } "nécessite support python
  let g:deoplete#enable_at_startup = 1 " Use deoplete.
  Plug 'carlitux/deoplete-ternjs', { 'do': 'npm install -g tern' } " javascript completion
  Plug 'Shougo/neco-vim', { 'for': 'vim' }
  Plug 'zchee/deoplete-jedi', { 'for': 'python' }
  Plug 'sebastianmarkow/deoplete-rust', {'for': ' rust '}
else 
  Plug 'vim-scripts/AutoComplPop' " Open completion popup automatically
endif
Plug 'metalelf0/supertab' " completion with tab (fork of ervandew/supertab to fix 'Invalid argument: pumvisible')
Plug 'lvht/phpcd.vim', { 'for': 'php', 'do': 'composer install' }

Plug 'Shougo/neosnippet'
Plug 'Shougo/neosnippet-snippets'

Plug 'sjl/splice.vim' " three way merge

Plug 'sheerun/vim-polyglot' " syntax highlighting, indentation for a wide collection of languages

"Specific languages support not already in vim-polyglot
Plug 'heavenshell/vim-jsdoc'
Plug 'othree/yajs.vim',{'for':'javascript'}
Plug 'gavocanov/vim-js-indent' "works well whith yajs.vim
Plug 'vim-scripts/indenthtml.vim'
Plug 'Quramy/tsuquyomi', {'for': 'typescript' } "TypeScript
Plug 'FrigoEU/psc-ide-vim' " interface to purescript IDE
Plug 'timonv/vim-cargo', { 'for': 'rust' }
Plug 'mmai/vim-markdown-wiki'
" Haskell
Plug 'pbrisbin/vim-syntax-shakespeare'
Plug 'parsonsmatt/vim2hs' "A collection of vimscripts for Haskell development
Plug 'parsonsmatt/intero-neovim'
Plug 'eagletmt/ghcmod-vim' " required by neco-ghc
Plug 'eagletmt/neco-ghc' " haskell completion 
Plug 'Twinside/vim-hoogle' " Access hoogle search 
Plug 'isovector/ghci.vim' " Tight integration between ghci and vim via tmux

"--------- Applications
"Plug 'blindFS/vim-taskwarrior' "task manager
Plug 'hsitz/VimOrganizer'
Plug 'tpope/vim-speeddating'
Plug 'mattn/webapi-vim' " interface to web APIs
Plug 'mmai/vim-scrum-markdown'
" Plug 'mmai/wikilink'
" Plug 'mmai/vim-zenmode'
Plug 'mikewest/vimroom'
let g:zenmode_background = "dark"
let g:zenmode_colorscheme = "desert"
" let g:zenmode_font ="Cousine 12"
let g:zenmode_font ="Cousine Nerd Font 12"
let g:zenmode_spell ="fr" "correction orthographique

" Tmux
Plug 'xaviershay/tslime.vim' " send text to tmux
Plug 'christoomey/vim-tmux-navigator' " Allow pane movement to jump out of vim into tmux

" En test
Plug 'reedes/vim-pencil' "vim for writers (TooglePencil) : line wrap, undo/redo by sentences, hide markdown formating chars..

" Required:
call plug#end()

" Load all *.vim config files from ./config/ directory
for fpath in split(globpath('~/.vim/config', '*.vim'), '\n')
  exe 'source' fpath
endfor
