###########################
#  Configuration
###########################

# On new systems : remember to press prefix+I to fetch plugins

# tmux prefix
unbind C-b
set -g prefix M-a # ALT-a
bind M-a send-prefix # Send Alt-a to an application runing in tmux by pressing ALT-a twice

# When destroying the last shell in a session, switches to another active session
set-option -g detach-on-destroy off

#enable mouse
set -g mouse on
# Start copy mode when scrolling up
# bind -n WheelUpPane copy-mode # conflict with vim scroll

# https://github.com/mawww/kakoune/blob/dfc67dd5826a24d13dca25426dee4bdfaceadc3e/doc/pages/faq.asciidoc#im-using-tmux-and-colors-look-weird
set -g default-terminal "screen-256color" # instead of tmux-256color not recognized on some servers (ratpdev)
set -ga terminal-overrides ",*col*:Tc"

# Open new windows in the directory of the current pane
bind c new-window -c "#{pane_current_path}"

#Breaking a Pane Out to a New Window
bind-key w break-pane -d

# split windows with v and b
bind v split-window -h -c "#{pane_current_path}"
bind b split-window -v -c "#{pane_current_path}"

# Choose session (previously <prefix> + s )
bind l choose-session

# ----------- Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# We do not use the plugin in order to add tests for others apps using
# C-navigation keys (eg fzf)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                         ($is_fzf && tmux send-keys C-j) || \
                         tmux select-pane -D"
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                          ($is_fzf && tmux send-keys C-k)  || \
                          tmux select-pane -U"


tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# ----------- End Smart pane switching with awareness of Vim splits.


# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# start windows and panes index at 1
set -g base-index 1
setw -g pane-base-index 1 # conflict with vimux

# select panes
# bind h select-pane -L 
# bind j select-pane -D 
# bind k select-pane -U 
# bind l select-pane -R 

# select windows
bind -r C-h select-window -t :- 
bind -r C-l select-window -t :+ 

# homerow for switching panes 
bind -r a select-window -t 1 
bind -r s select-window -t 2 
bind -r d select-window -t 3 
bind -r f select-window -t 4 
bind -r g select-window -t 5 

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5


# increase scroll-back history
set -g history-limit 5000

# use vim key bindings
setw -g mode-keys vi

# decrease repeat time because it interfers with term & vim..
set -g repeat-time 100


# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# re-number windows when one is closed
set -g renumber-windows on

###########################
#  Tmuxinator
###########################
set-window-option -g pane-base-index 1

###########################
#  Key Bindings
###########################

# reload config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# switch to last pane
bind-key C-b last-pane

# reorder windows with shift left right
bind-key -n S-Left swap-window -t -1
bind-key -n S-Right swap-window -t +1

# go to copy mode 
unbind Escape
bind-key Escape copy-mode

# paste
unbind C-p
bind C-p paste-buffer

# begin selection ('v' like vim )
bind-key -T copy-mode-vi v send-keys -X begin-selection
# Copy to clipboard ('y' like vim)
bind-key -T copy-mode-vi y send-keys -X copy-selection

# quickly switch panes
unbind ^J
bind ^J select-pane -t :.+

###########################
# Status Bar
###########################

# set refresh interval for status bar
set -g status-interval 30

# center the status bar
set -g status-justify left

# show session, window, pane in left status bar
# set -g status-left-length 40
# set -g status-left '#[fg=red]#S#[fg=red] #I:#P#[default]'

##########################
#     theme              #
##########################
set -g status-bg 'colour235'
set -g message-command-style fg='colour222',bg='colour238'
set -g status-justify centre
set -g status-left-length '100'
set -g status on
set -g status-style none
set -g pane-active-border-style fg='colour154'
set -g message-style bg='colour238',fg='colour222'
set -g status-right-length '100'
set -g status-right-style none
set -g pane-border-style fg='colour238'
set -g status-left-style none
setw -g window-status-style fg='colour121',none

setw -g window-status-activity-style bg='colour235',fg='colour154'

setw -g window-status-separator ''
setw -g window-status-style bg='colour235'
set -g status-left '#[fg=colour232,bg=colour7] #S #[fg=colour7,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #W #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]'
set -g status-right '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour121,bg=colour235] %R - %a %d/%m/%Y #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #H #[fg=colour222,bg=colour238] #[fg=colour7,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour232,bg=colour7] #(rainbarf --battery --remaining --no-rgb)'
setw -g window-status-format '#[fg=colour230,bg=colour235,nobold,nounderscore,noitalics] #I. #W #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]'
setw -g window-status-current-format '#[fg=colour235,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #I. #W #F #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]'
# Theme options
set-option -g @batt_charging_icon "⚡"
set-option -g @batt_discharging_icon ""
set -g @online_icon "✔"
set -g @offline_icon "✗"
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90

##########################
#       apps shortcuts   #
##########################
# Quickly view system & process info in htop
bind-key h split-window -h "htop"

##########################
#       PLUGINS          #
##########################
set -g @plugin 'tmux-plugins/tmux-copycat' # select text on screen : prefix + <ctrl>f (files), prefix + <ctrl>u (urls), prefix + / (search text)
set -g @plugin 'tmux-plugins/tmux-open' # open highlighted text : o ; edit: C-o ; search on web Shift-s
set -g @plugin 'laktak/extrakto' # complete with text on screen : prefix + <tab>
# We use custom conf instead (to enable others apps like fzf)
# set -g @plugin 'christoomey/vim-tmux-navigator' # Smart pane switching with awareness of Vim splits.

# Initialize TMUX plugin manager (keep theses lines at the very bottom of tmux.conf)
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run -b '~/.tmux/plugins/tpm/tpm'
